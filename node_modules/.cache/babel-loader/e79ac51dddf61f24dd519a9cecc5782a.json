{"ast":null,"code":"var _jsxFileName = \"/Users/zoyamilovanova/WebstormProjects/clickGame/src/components/pages/GameSettingsPage/GameSettingsPage.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setSettings } from \"../../../redux/actions\";\nimport { ModeInput, NameInput, Option, PlayButton } from \"./GameSettingsPage.styled\";\n\nconst GameSettingsPage = () => {\n  const [mode, setMode] = useState('');\n  const [name, setName] = useState('');\n  return React.createElement(React.Fragment, null, React.createElement(ModeInput, {\n    value: mode,\n    onChange: setMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Option, {\n    name: \"easyMode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"easy Mode\"), React.createElement(Option, {\n    name: \"normalMode\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"normalMode\"), React.createElement(Option, {\n    name: \"hardMode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"hardMode\")), React.createElement(NameInput, {\n    value: name,\n    onChange: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(PlayButton, {\n    onClick: () => this.props.setSettings(mode, name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSettings: (mode, name) => dispatch(setSettings(mode, name))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(GameSettingsPage);","map":{"version":3,"sources":["/Users/zoyamilovanova/WebstormProjects/clickGame/src/components/pages/GameSettingsPage/GameSettingsPage.js"],"names":["React","useState","connect","setSettings","ModeInput","NameInput","Option","PlayButton","GameSettingsPage","mode","setMode","name","setName","props","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAuD,2BAAvD;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,SACI,0CACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEQ,IAAlB;AAAwB,IAAA,QAAQ,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAA0B,IAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,EAOI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEC,IAAlB;AAAwB,IAAA,QAAQ,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAI,KAAKC,KAAL,CAAWV,WAAX,CAAuBM,IAAvB,EAA6BE,IAA7B,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAYH,CAjBD;;AAmBA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,WAAW,EAAE,CAACM,IAAD,EAAOE,IAAP,KAAgBI,QAAQ,CAACZ,WAAW,CAACM,IAAD,EAAOE,IAAP,CAAZ;AADlC,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCN,gBAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {setSettings} from \"../../../redux/actions\"\nimport {ModeInput, NameInput, Option, PlayButton} from \"./GameSettingsPage.styled\";\n\nconst GameSettingsPage = () => {\n\n    const [mode, setMode] = useState('');\n    const [name, setName] = useState('');\n\n    return (\n        <>\n            <ModeInput value={mode} onChange={setMode} >\n                <Option name='easyMode'>easy Mode</Option>\n                <Option name='normalMode' selected>normalMode</Option>\n                <Option name='hardMode'>hardMode</Option>\n            </ModeInput>\n\n            <NameInput value={name} onChange={setName} />\n            <PlayButton onClick={()=>this.props.setSettings(mode, name)}/>\n        </>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSettings: (mode, name) => dispatch(setSettings(mode, name)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(GameSettingsPage);\n"]},"metadata":{},"sourceType":"module"}