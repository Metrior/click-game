{"ast":null,"code":"var _jsxFileName = \"/Users/zoyamilovanova/WebstormProjects/clickGame/src/components/Grid/Grid.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { ScalableGrid } from \"./Grid.styled\";\nimport SingleBlock from \"../SingleBlock\";\n\nconst Grid = props => {\n  const {\n    array,\n    gridSide,\n    createArray\n  } = props;\n  useEffect(() => {\n    if (!array) {\n      createArray(gridSide);\n    }\n  }, [array]);\n  return React.createElement(ScalableGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, array ? array.map((block, i) => React.createElement(SingleBlock, {\n    key: i,\n    color: block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })) : null);\n};\n\nexport default Grid;","map":{"version":3,"sources":["/Users/zoyamilovanova/WebstormProjects/clickGame/src/components/Grid/Grid.js"],"names":["React","useEffect","useRef","ScalableGrid","SingleBlock","Grid","props","array","gridSide","createArray","map","block","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AAEA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEpB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAAiCH,KAAvC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACM,KAAL,EAAY;AACRE,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH;AACJ,GAJQ,EAIP,CAACD,KAAD,CAJO,CAAT;AAMA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAU,CAACC,KAAD,EAAQC,CAAR,KAAa,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,CAAlB;AAAqB,IAAA,KAAK,EAAED,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAH,GAAmE,IAD7E,CADJ;AAKH,CAfD;;AAiBA,eAAeN,IAAf","sourcesContent":["import React, {useEffect, useRef} from 'react';\n\nimport {ScalableGrid} from \"./Grid.styled\"\nimport SingleBlock from \"../SingleBlock\"\n\nconst Grid = (props) => {\n\n    const {array, gridSide, createArray} = props\n\n    useEffect(() => {\n        if (!array) {\n            createArray(gridSide)\n        }\n    },[array]);\n\n    return (\n        <ScalableGrid>\n            {array ? array.map((block, i)=>(<SingleBlock key={i} color={block}/>)) : null}\n        </ScalableGrid>\n    );\n};\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}